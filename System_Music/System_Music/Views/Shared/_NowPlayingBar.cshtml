<!-- _NowPlayingBar.cshtml -->
<div class="now-playing-bar">
    <!-- Bên trái: Ảnh bìa và thông tin bài hát -->
    <div class="track-info">
        <img src="https://dummyimage.com/65x65/000000/000000.png" alt="Track cover" class="track-cover">
        <div class="track-details">
            <span class="now-playing-track-title"></span>
            <span class="track-artist"></span>
        </div>
    </div>

    <!-- Giữa: Thanh tiến trình và nút điều khiển -->
    <div class="playback-controls">
        <div class="control-buttons">
            <button class="control-btn shuffle-btn" aria-label="Bật chế độ shuffle" disabled>
                <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                    <path d="M13.151.922a.75.75 0 1 0-1.06 1.06L13.109 3H11.16a3.75 3.75 0 0 0-2.873 1.34l-6.173 7.356A2.25 2.25 0 0 1 .39 12.5H0V14h.391a3.75 3.75 0 0 0 2.873-1.34l6.173-7.356a2.25 2.25 0 0 1 1.724-.804h1.947l-1.017 1.018a.75.75 0 0 0 1.06 1.06L15.98 3.75 13.15.922zM.391 3.5H0V2h.391c1.109 0 2.16.49 2.873 1.34L4.89 5.277l-.979 1.167-1.796-2.14A2.25 2.25 0 0 0 .39 3.5z"></path>
                    <path d="m7.5 10.723.98-1.167.957 1.14a2.25 2.25 0 0 0 1.724.804h1.947l-1.017-1.018a.75.75 0 1 1 1.06-1.06l2.829 2.828-2.829 2.828a.75.75 0 1 1-1.06-1.06L13.109 13H11.16a3.75 3.75 0 0 1-2.873-1.34l-.787-.938z"></path>
                </svg>
            </button>
            <button class="control-btn previous-btn" aria-label="Bài trước" disabled>
                <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                    <path d="M3.3 1a.7.7 0 0 1 .7.7v5.15l9.95-5.744a.7.7 0 0 1 1.05.606v12.575a.7.7 0 0 1-1.05.607L4 9.149V14.3a.7.7 0 0 1-.7.7H1.7a.7.7 0 0 1-.7-.7V1.7a.7.7 0 0 1 .7-.7h1.6z"></path>
                </svg>
            </button>
            <button class="control-btn play-pause-btn" aria-label="Phát hoặc tạm dừng" disabled>
                <svg viewBox="0 0 16 16" class="icon" width="24" height="24">
                    <path d="M3 1.713a.7.7 0 0 1 1.05-.607l10.89 6.288a.7.7 0 0 1 0 1.212L4.05 14.894A.7.7 0 0 1 3 14.288V1.713z"></path>
                </svg>
            </button>
            <button class="control-btn next-btn" aria-label="Bài tiếp theo" disabled>
                <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                    <path d="M12.7 1a.7.7 0 0 0-.7.7v5.15L2.05 1.107A.7.7 0 0 0 1 1.712v12.575a.7.7 0 0 0 1.05.607L12 9.149V14.3a.7.7 0 0 0 .7.7h1.6a.7.7 0 0 0 .7-.7V1.7a.7.7 0 0 0-.7-.7h-1.6z"></path>
                </svg>
            </button>
            <button class="control-btn repeat-btn" data-testid="control-button-repeat" role="checkbox" aria-checked="false" aria-label="Bật chế độ lặp lại" disabled>
                <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                    <path d="M0 4.75A3.75 3.75 0 0 1 3.75 1h8.5A3.75 3.75 0 0 1 16 4.75v5a3.75 3.75 0 0 1-3.75 3.75H9.81l1.018 1.018a.75.75 0 1 1-1.06 1.06L6.939 12.75l2.829-2.828a.75.75 0 1 1 1.06 1.06L9.811 12h2.439a2.25 2.25 0 0 0 2.25-2.25v-5a2.25 2.25 0 0 0-2.25-2.25h-8.5A2.25 2.25 0 0 0 1.5 4.75v5A2.25 2.25 0 0 0 3.75 12H5v1.5H3.75A3.75 3.75 0 0 1 0 9.75v-5z"></path>
                </svg>
            </button>
        </div>
        <div class="progress-bar">
            <span class="current-time">0:00</span>
            <input type="range" min="0" max="0" value="0" class="progress-slider" aria-label="Thanh tiến trình bài hát" disabled>
            <span class="total-time">0:00</span>
        </div>
    </div>
    <!-- Bên phải: Các nút chức năng bổ sung -->
    <div class="extra-controls">
        <button class="control-btn queue-btn" aria-label="Hàng đợi" disabled>
            <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                <path d="M15 15H1v-1.5h14V15zm0-4.5H1V9h14v1.5zm-14-7A2.5 2.5 0 0 1 3.5 1h9a2.5 2.5 0 0 1 0 5h-9A2.5 2.5 0 0 1 1 3.5zm2.5-1a1 1 0 0 0 0 2h9a1 1 0 1 0 0-2h-9z"></path>
            </svg>
        </button>
        <button data-testid="control-button-npv" data-active="false" aria-pressed="false" data-restore-focus-key="now_playing_view" class="control-btn" aria-label="Chế độ xem Đang phát" data-encore-id="buttonTertiary">
            <svg data-encore-id="icon" role="img" aria-hidden="true" class="icon" viewBox="0 0 16 16">
                <path d="M11.196 8 6 5v6l5.196-3z"></path>
                <path d="M15.002 1.75A1.75 1.75 0 0 0 13.252 0h-10.5a1.75 1.75 0 0 0-1.75 1.75v12.5c0 .966.783 1.75 1.75 1.75h10.5a1.75 1.75 0 0 0 1.75-1.75V1.75zm-1.75-.25a.25.25 0 0 1 .25.25v12.5a.25.25 0 0 1-.25.25h-10.5a.25.25 0 0 1-.25-.25V1.75a.25.25 0 0 1 .25-.25h10.5z"></path>
            </svg>
        </button>
        <button class="control-btn lyrics-btn" aria-label="Lời bài hát" disabled>
            <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                <path d="M13.426 2.574a2.831 2.831 0 0 0-4.797 1.55l3.247 3.247a2.831 2.831 0 0 0 1.55-4.797zM10.5 8.118l-2.619-2.62A63303.13 63303.13 0 0 0 4.74 9.075L2.065 12.12a1.287 1.287 0 0 0 1.816 1.816l3.06-2.688 3.56-3.129zM7.12 4.094a4.331 4.331 0 1 1 4.786 4.786l-3.974 3.493-3.06 2.689a2.787 2.787 0 0 1-3.933-3.933l2.676-3.045 3.505-3.99z"></path>
            </svg>
        </button>
        <div class="volume-bar" data-testid="volume-bar" dir="ltr" style="--button-size: 32px; --slider-width: 100%;">
            <button class="volume-mute-btn control-button" aria-label="Tắt tiếng" aria-describedby="volume-icon" data-testid="volume-bar-toggle-mute-button">
                <svg data-encore-id="icon" role="presentation" aria-label="Âm lượng thấp" aria-hidden="false" class="volume-icon" id="volume-icon" viewBox="0 0 16 16" style="--encore-icon-height: var(--encore-graphic-size-informative-smaller); --encore-icon-width: var(--encore-graphic-size-informative-smaller);">
                    <path d="M9.741.85a.75.75 0 0 1 .375.65v13a.75.75 0 0 1-1.125.65l-6.925-4a3.642 3.642 0 0 1-1.33-4.967 3.639 3.639 0 0 1 1.33-1.332l6.925-4a.75.75 0 0 1 .75 0zm-6.924 5.3a2.139 2.139 0 0 0 0 3.7l5.8 3.35V2.8l-5.8 3.35zm8.683 4.29V5.56a2.75 2.75 0 0 1 0 4.88z"></path>
                </svg>
            </button>
            <div class="volume-bar-container">
                <div class="volume-bar-wrapper">
                    <label class="volume-label hidden-visually" for="volume-slider">Thay đổi âm lượng</label>
                    <div class="volume-progress-bar" data-testid="progress-bar" style="--progress-bar-transform: 50%;">
                        <div class="progress-bar-background" data-testid="progress-bar-background">
                            <div class="progress-bar-fill-wrapper">
                                <div class="progress-bar-fill" style="width: 50%;"></div>
                            </div>
                            <div class="progress-bar-thumb" style="left: calc(50% - 6px);"></div>
                        </div>
                        <input type="range" id="volume-slider" min="0" max="1" step="0.01" value="0.5" class="volume-slider" aria-label="Thay đổi âm lượng">
                    </div>
                </div>
            </div>
        </div>
        <button class="control-btn fullscreen-btn" aria-label="Toàn màn hình" disabled>
            <svg viewBox="0 0 16 16" class="icon" width="16" height="16">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M0.25 3C0.25 2.0335 1.0335 1.25 2 1.25H5.375V2.75H2C1.86193 2.75 1.75 2.86193 1.75 3V5.42857H0.25V3ZM14 2.75H10.625V1.25H14C14.9665 1.25 15.75 2.0335 15.75 3V5.42857H14.25V3C14.25 2.86193 14.1381 2.75 14 2.75ZM1.75 10.5714V13C1.75 13.1381 1.86193 13.25 2 13.25H5.375V14.75H2C1.0335 14.75 0.25 13.9665 0.25 13V10.5714H1.75ZM14.25 13V10.5714H15.75V13C15.75 13.9665 14.9665 14.75 14 14.75H10.625V13.25H14C14.1381 13.25 14.25 13.1381 14.25 13Z"></path>
            </svg>
        </button>
        <!-- Audio element -->
        <audio id="audio-player" preload="none"></audio>
    </div>
</div>
<script>
    // Đảm bảo trạng thái toàn cục đã được khởi tạo
    window.playerState = window.playerState || {
        audio: document.getElementById('audio-player'),
        isPlaying: false,
        currentTrack: null,
        queue: [],
        currentIndex: 0,
        repeatMode: 'off',
        isLyricsActive: false // Thêm trạng thái cho lyrics
    };

    // Khai báo các phần tử giao diện
    const playPauseBtn = document.querySelector('.play-pause-btn');
    const repeatBtn = document.querySelector('.repeat-btn');
    const progressSlider = document.querySelector('.progress-slider');
    const currentTimeElement = document.querySelector('.current-time');
    const totalTimeElement = document.querySelector('.total-time');
    const volumeSlider = document.querySelector('.volume-slider');
    const volumeProgressBar = document.querySelector('.volume-progress-bar');
    const progressFill = document.querySelector('.progress-bar-fill');
    const progressThumb = document.querySelector('.progress-bar-thumb');
    const volumeIcon = document.querySelector('#volume-icon');
    const volumeBar = document.querySelector('.volume-bar');
    const muteButton = document.querySelector('.volume-mute-btn');
    const lyricsBtn = document.querySelector('.lyrics-btn');

    // Hàm cập nhật nút play/pause
    window.updatePlayPauseButton = function(isPlaying) {
        if (playPauseBtn) {
            playPauseBtn.innerHTML = isPlaying
                ? `<svg viewBox="0 0 16 16" class="icon" width="24" height="24"><path d="M2.7 1a.7.7 0 0 0-.7.7v12.6a.7.7 0 0 0 .7.7h2.6a.7.7 0 0 0 .7-.7V1.7a.7.7 0 0 0-.7-.7H2.7zm8 0a.7.7 0 0 0-.7.7v12.6a.7.7 0 0 0 .7.7h2.6a.7.7 0 0 0 .7-.7V1.7a.7.7 0 0 0-.7-.7h-2.6z"></path></svg>`
                : `<svg viewBox="0 0 16 16" class="icon" width="24" height="24"><path d="M3 1.713a.7.7 0 0 1 1.05-.607l10.89 6.288a.7.7 0 0 1 0 1.212L4.05 14.894A.7.7 0 0 1 3 14.288V1.713z"></path></svg>`;
            playPauseBtn.disabled = !window.playerState.currentTrack;
        }
    };

    // Hàm cập nhật nút repeat
    window.updateRepeatButton = function() {
        if (repeatBtn) {
            const svg = repeatBtn.querySelector('svg');
            if (!svg) return;

            if (window.playerState.repeatMode === 'off') {
                repeatBtn.setAttribute('aria-checked', 'false');
                repeatBtn.setAttribute('aria-label', 'Bật chế độ lặp lại');
                svg.innerHTML = `<path d="M0 4.75A3.75 3.75 0 0 1 3.75 1h8.5A3.75 3.75 0 0 1 16 4.75v5a3.75 3.75 0 0 1-3.75 3.75H9.81l1.018 1.018a.75.75 0 1 1-1.06 1.06L6.939 12.75l2.829-2.828a.75.75 0 1 1 1.06 1.06L9.811 12h2.439a2.25 2.25 0 0 0 2.25-2.25v-5a2.25 2.25 0 0 0-2.25-2.25h-8.5A2.25 2.25 0 0 0 1.5 4.75v5A2.25 2.25 0 0 0 3.75 12H5v1.5H3.75A3.75 3.75 0 0 1 0 9.75v-5z"></path>`;
                svg.style.fill = '#B3B3B3';
            } else if (window.playerState.repeatMode === 'repeat-all') {
                repeatBtn.setAttribute('aria-checked', 'true');
                repeatBtn.setAttribute('aria-label', 'Bật chế độ lặp lại một bài');
                svg.innerHTML = `<path d="M0 4.75A3.75 3.75 0 0 1 3.75 1h8.5A3.75 3.75 0 0 1 16 4.75v5a3.75 3.75 0 0 1-3.75 3.75H9.81l1.018 1.018a.75.75 0 1 1-1.06 1.06L6.939 12.75l2.829-2.828a.75.75 0 1 1 1.06 1.06L9.811 12h2.439a2.25 2.25 0 0 0 2.25-2.25v-5a2.25 2.25 0 0 0-2.25-2.25h-8.5A2.25 2.25 0 0 0 1.5 4.75v5A2.25 2.25 0 0 0 3.75 12H5v1.5H3.75A3.75 3.75 0 0 1 0 9.75v-5z"></path>`;
                svg.style.fill = '#1DB954';
            } else {
                repeatBtn.setAttribute('aria-checked', 'mixed');
                repeatBtn.setAttribute('aria-label', 'Huỷ kích hoạt chế độ lặp lại');
                svg.innerHTML = `<path d="M0 4.75A3.75 3.75 0 0 1 3.75 1h.75v1.5h-.75A2.25 2.25 0 0 0 1.5 4.75v5A2.25 2.25 0 0 0 3.75 12H5v1.5H3.75A3.75 3.75 0 0 1 0 9.75v-5ZM12.25 2.5a2.25 2.25 0 0 1 2.25 2.25v5A2.25 2.25 0 0 1 12.25 12H9.81l1.018-1.018a.75.75 0 0 0-1.06-1.06L6.939 12.75l2.829 2.828a.75.75 0 0 0 1.06-1.06L9.811 13.5h2.439A3.75 3.75 0 0 0 16 9.75v-5A3.75 3.75 0 0 0 12.25 1h-.75v1.5h.75Z"></path><path d="m8 1.85.77.694H6.095V1.488c.697-.051 1.2-.18 1.507-.385.316-.205.51-.51.583-.913h1.32V8H8V1.85Z"></path><path d="M8.77 2.544 8 1.85v.693h.77Z"></path>`;
                svg.style.fill = '#1DB954';
            }
            repeatBtn.disabled = !window.playerState.currentTrack;
        }
    };

    // Hàm cập nhật thanh tiến trình
    function updateProgressBar() {
        if (progressSlider && currentTimeElement && totalTimeElement) {
            const currentSeconds = Math.floor(window.playerState.audio.currentTime);
            const currentMinutes = Math.floor(currentSeconds / 60);
            const currentSecondsDisplay = currentSeconds % 60;
            currentTimeElement.textContent = `${currentMinutes}:${currentSecondsDisplay < 10 ? '0' : ''}${currentSecondsDisplay}`;

            const totalSeconds = window.playerState.audio.duration || 0;
            const totalMinutes = Math.floor(totalSeconds / 60);
            const totalSecondsDisplay = Math.floor(totalSeconds % 60);
            totalTimeElement.textContent = `${totalMinutes}:${totalSecondsDisplay < 10 ? '0' : ''}${totalSecondsDisplay}`;

            progressSlider.max = totalSeconds;
            progressSlider.value = window.playerState.audio.currentTime;
            const progressPercent = (window.playerState.audio.currentTime / totalSeconds) * 100 || 0;
            progressSlider.style.setProperty('--progress', `${progressPercent}%`);
        }
    }

    // Hàm cập nhật thanh âm lượng
    function updateVolumeProgressBar(volume) {
        if (volumeProgressBar && progressFill && progressThumb) {
            const percentage = volume * 100;
            volumeProgressBar.style.setProperty('--progress-bar-transform', `${percentage}%`);
            progressFill.style.width = `${percentage}%`;
            progressThumb.style.left = `calc(${percentage}% - 6px)`;
        }
    }

    // Hàm cập nhật biểu tượng âm lượng
    function updateVolumeIcon(volume) {
        if (volumeIcon) {
            const paths = {
                muted: `<path d="M13.86 5.47a.75.75 0 0 0-1.061 0l-1.47 1.47-1.47-1.47A.75.75 0 0 0 8.8 6.53L10.269 8l-1.47 1.47a.75.75 0 1 0 1.06 1.06l1.47-1.47 1.47 1.47a.75.75 0 0 0 1.06-1.06L12.39 8l1.47-1.47a.75.75 0 0 0 0-1.06z"></path><path d="M10.116 1.5A.75.75 0 0 0 8.991.85l-6.925 4a3.642 3.642 0 0 0-1.33 4.967 3.639 3.639 0 0 0 1.33 1.332l6.925 4a.75.75 0 0 0 1.125-.649v-1.906a4.73 4.73 0 0 1-1.5-.694v1.3L2.817 9.852a2.141 2.141 0 0 1-.781-2.92c.187-.324.456-.594.78-.782l5.8-3.35v1.3c.45-.313.956-.55 1.5-.694V1.5z"></path>`,
                low: `<path d="M9.741.85a.75.75 0 0 1 .375.65v13a.75.75 0 0 1-1.125.65l-6.925-4a3.642 3.642 0 0 1-1.33-4.967 3.639 3.639 0 0 1 1.33-1.332l6.925-4a.75.75 0 0 1 .75 0zm-6.924 5.3a2.139 2.139 0 0 0 0 3.7l5.8 3.35V2.8l-5.8 3.35zm8.683 4.29V5.56a2.75 2.75 0 0 1 0 4.88z"></path>`,
                medium: `<path d="M9.741.85a.75.75 0 0 1 .375.65v13a.75.75 0 0 1-1.125.65l-6.925-4a3.642 3.642 0 0 1-1.33-4.967 3.639 3.639 0 0 1 1.33-1.332l6.925-4a.75.75 0 0 1 .75 0zm-6.924 5.3a2.139 2.139 0 0 0 0 3.7l5.8 3.35V2.8l-5.8 3.35zm8.683 6.087a4.502 4.502 0 0 0 0-8.474v1.65a2.999 2.999 0 0 1 0 5.175v1.649z"></path>`,
                high: `<path d="M9.741.85a.75.75 0 0 1 .375.65v13a.75.75 0 0 1-1.125.65l-6.925-4a3.642 3.642 0 0 1-1.33-4.967 3.639 3.639 0 0 1 1.33-1.332l6.925-4a.75.75 0 0 1 .75 0zm-6.924 5.3a2.139 2.139 0 0 0 0 3.7l5.8 3.35V2.8l-5.8 3.35zm8.683 4.29V5.56a2.75 2.75 0 0 1 0 4.88z"></path><path d="M11.5 13.614a5.752 5.752 0 0 0 0-11.228v1.55a4.252 4.252 0 0 1 0 8.127v1.55z"></path>`
            };

            if (volume === 0) {
                volumeIcon.innerHTML = paths.muted;
                volumeIcon.setAttribute('aria-label', 'Tắt tiếng');
            } else if (volume > 0 && volume <= 0.33) {
                volumeIcon.innerHTML = paths.low;
                volumeIcon.setAttribute('aria-label', 'Âm lượng thấp');
            } else if (volume > 0.33 && volume <= 0.66) {
                volumeIcon.innerHTML = paths.medium;
                volumeIcon.setAttribute('aria-label', 'Âm lượng trung bình');
            } else {
                volumeIcon.innerHTML = paths.high;
                volumeIcon.setAttribute('aria-label', 'Âm lượng cao');
            }
        }
    }

    // Hàm cập nhật nút lyrics
    window.updateLyricsButton = function() {
        if (lyricsBtn) {
            const svg = lyricsBtn.querySelector('svg');
            if (!svg) return;

            if (window.playerState.isLyricsActive) {
                lyricsBtn.setAttribute('aria-pressed', 'true');
                lyricsBtn.setAttribute('data-active', 'true');
                lyricsBtn.classList.add('Button-sc-1dqy6lx-0', 'fprjoI', 'e-9911-overflow-wrap-anywhere', 'e-9911-button-tertiary--icon-only', 'KAZD28usA1vPz5GVpm63', 'RK45o6dbvO1mb0wQtSwq', 'EHxL6K_6WWDlTCZP6x5w', 'Xmv2oAnTB85QE4sqbK00');
                svg.setAttribute('data-encore-id', 'icon');
                svg.setAttribute('role', 'img');
                svg.setAttribute('aria-hidden', 'true');
                svg.classList.add('e-9911-icon', 'e-9911-baseline');
                svg.style.setProperty('--encore-icon-height', 'var(--encore-graphic-size-decorative-smaller)');
                svg.style.setProperty('--encore-icon-width', 'var(--encore-graphic-size-decorative-smaller)');
                svg.innerHTML = `<path d="M13.426 2.574a2.831 2.831 0 0 0-4.797 1.55l3.247 3.247a2.831 2.831 0 0 0 1.55-4.797zM10.5 8.118l-2.619-2.62A63303.13 63303.13 0 0 0 4.74 9.075L2.065 12.12a1.287 1.287 0 0 0 1.816 1.816l3.06-2.688 3.56-3.129zM7.12 4.094a4.331 4.331 0 1 1 4.786 4.786l-3.974 3.493-3.06 2.689a2.787 2.787 0 0 1-3.933-3.933l2.676-3.045 3.505-3.99z"></path>`;
                svg.style.fill = '#1DB954'; // Màu xanh khi active
            } else {
                lyricsBtn.setAttribute('aria-pressed', 'false');
                lyricsBtn.setAttribute('data-active', 'false');
                lyricsBtn.className = 'control-btn lyrics-btn'; // Khôi phục class ban đầu
                svg.removeAttribute('data-encore-id');
                svg.removeAttribute('role');
                svg.removeAttribute('aria-hidden');
                svg.className = 'icon'; // Khôi phục class ban đầu
                svg.style.removeProperty('--encore-icon-height');
                svg.style.removeProperty('--encore-icon-width');
                svg.innerHTML = `<path d="M13.426 2.574a2.831 2.831 0 0 0-4.797 1.55l3.247 3.247a2.831 2.831 0 0 0 1.55-4.797zM10.5 8.118l-2.619-2.62A63303.13 63303.13 0 0 0 4.74 9.075L2.065 12.12a1.287 1.287 0 0 0 1.816 1.816l3.06-2.688 3.56-3.129zM7.12 4.094a4.331 4.331 0 1 1 4.786 4.786l-3.974 3.493-3.06 2.689a2.787 2.787 0 0 1-3.933-3.933l2.676-3.045 3.505-3.99z"></path>`;
                svg.style.fill = '#B3B3B3'; // Màu xám khi không active
            }
            lyricsBtn.disabled = !window.playerState.currentTrack;
        }
    };

    // Xử lý sự kiện play/pause
    if (playPauseBtn) {
        playPauseBtn.addEventListener('click', function () {
            if (!window.playerState.currentTrack) {
                alert('Vui lòng chọn một bài hát trước khi phát.');
                return;
            }
            if (window.playerState.isPlaying) {
                window.playerState.audio.pause();
                window.playerState.isPlaying = false;
                window.updatePlayPauseButton(false);
            } else {
                window.playerState.audio.play().then(() => {
                    window.playerState.isPlaying = true;
                    window.updatePlayPauseButton(true);
                }).catch(error => {
                    console.error('Lỗi phát bài:', error);
                    alert('Lỗi khi phát bài hát: ' + error.message);
                });
            }
        });
    }

    // Xử lý sự kiện repeat
    if (repeatBtn) {
        repeatBtn.addEventListener('click', function () {
            if (!window.playerState.currentTrack) {
                alert('Vui lòng chọn một bài hát trước khi thay đổi chế độ lặp lại.');
                return;
            }
            if (window.playerState.repeatMode === 'off') {
                window.playerState.repeatMode = 'repeat-all';
            } else if (window.playerState.repeatMode === 'repeat-all') {
                window.playerState.repeatMode = 'repeat-one';
            } else {
                window.playerState.repeatMode = 'off';
            }
            window.updateRepeatButton();
            console.log('Repeat mode updated to:', window.playerState.repeatMode);
        });
    }

    // Xử lý thanh tiến trình (click và kéo thả)
    if (progressSlider) {
        console.log('progressSlider found:', progressSlider);
        let isDragging = false;

        function updateProgressFromPosition(e) {
            if (!window.playerState.currentTrack || isNaN(window.playerState.audio.duration)) {
                console.warn('No track or invalid duration');
                alert('Vui lòng chọn một bài hát trước.');
                return;
            }
            const rect = progressSlider.getBoundingClientRect();
            const posX = e.clientX - rect.left;
            let newValue = (posX / rect.width) * window.playerState.audio.duration;
            newValue = Math.max(0, Math.min(window.playerState.audio.duration, newValue));

            window.playerState.audio.currentTime = newValue;
            progressSlider.value = newValue;
            updateProgressBar();
            console.log('Time updated to:', newValue, 'Position:', posX, 'Width:', rect.width);
        }

        progressSlider.addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('progressSlider clicked');
            updateProgressFromPosition(e);
        });

        progressSlider.addEventListener('mousedown', function (e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('progressSlider mousedown');
            isDragging = true;
            updateProgressFromPosition(e);
        });

        document.addEventListener('mousemove', function (e) {
            if (isDragging) {
                console.log('Dragging at:', e.clientX);
                updateProgressFromPosition(e);
            }
        });

        document.addEventListener('mouseup', function () {
            if (isDragging) {
                console.log('Dragging stopped');
                isDragging = false;
            }
        });

        progressSlider.addEventListener('input', function () {
            console.log('progressSlider input:', this.value);
            if (!window.playerState.currentTrack) {
                this.value = 0;
                return;
            }
            const newValue = parseFloat(this.value);
            window.playerState.audio.currentTime = newValue;
            updateProgressBar();
        });

        progressSlider.addEventListener('dblclick', function () {
            console.log('progressSlider double-clicked');
            if (!window.playerState.currentTrack) {
                return;
            }
            window.playerState.audio.currentTime = 0;
            this.value = 0;
            updateProgressBar();
            if (!window.playerState.audio.paused) {
                window.playerState.audio.play();
            }
        });
    } else {
        console.error('progressSlider not found');
    }

    // Xử lý âm lượng
    if (volumeSlider && volumeProgressBar && progressFill && progressThumb && volumeIcon) {
        let isDragging = false;
        let lastVolume = window.playerState.audio.volume || 0.5;

        window.playerState.audio.volume = parseFloat(volumeSlider.value) || 0.5;
        volumeSlider.value = window.playerState.audio.volume;
        updateVolumeIcon(window.playerState.audio.volume);
        updateVolumeProgressBar(window.playerState.audio.volume);

        volumeProgressBar.addEventListener('mousedown', function (e) {
            isDragging = true;
            updateVolumeFromPosition(e);
        });

        document.addEventListener('mousemove', function (e) {
            if (isDragging) {
                updateVolumeFromPosition(e);
            }
        });

        document.addEventListener('mouseup', function () {
            isDragging = false;
        });

        function updateVolumeFromPosition(e) {
            const rect = volumeProgressBar.getBoundingClientRect();
            const posX = e.clientX - rect.left;
            let newVolume = posX / rect.width;
            newVolume = Math.max(0, Math.min(1, newVolume));

            window.playerState.audio.volume = newVolume;
            volumeSlider.value = newVolume;
            updateVolumeProgressBar(newVolume);
            updateVolumeIcon(newVolume);
            console.log('Volume updated to:', newVolume);
        }

        volumeSlider.addEventListener('input', function () {
            const newVolume = parseFloat(this.value);
            if (newVolume >= 0 && newVolume <= 1) {
                window.playerState.audio.volume = newVolume;
                updateVolumeProgressBar(newVolume);
                updateVolumeIcon(newVolume);
                console.log('Volume updated to:', newVolume);
            }
        });

        if (muteButton) {
            muteButton.addEventListener('click', function () {
                if (window.playerState.audio.volume > 0) {
                    lastVolume = window.playerState.audio.volume;
                    window.playerState.audio.volume = 0;
                    volumeSlider.value = 0;
                    updateVolumeProgressBar(0);
                    updateVolumeIcon(0);
                    this.setAttribute('aria-label', 'Bật tiếng');
                    console.log('Muted, volume set to:', window.playerState.audio.volume);
                } else {
                    window.playerState.audio.volume = lastVolume || 0.5;
                    volumeSlider.value = lastVolume || 0.5;
                    updateVolumeProgressBar(window.playerState.audio.volume);
                    updateVolumeIcon(window.playerState.audio.volume);
                    this.setAttribute('aria-label', 'Tắt tiếng');
                    console.log('Unmuted, volume restored to:', window.playerState.audio.volume);
                }
            });
        }
    }

    // Xử lý sự kiện khi audio thay đổi thời gian
    window.playerState.audio.addEventListener('timeupdate', updateProgressBar);

    // Xử lý khi audio kết thúc
    window.playerState.audio.addEventListener('ended', function () {
        if (window.playerState.repeatMode === 'repeat-one') {
            window.playerState.audio.currentTime = 0;
            window.playerState.audio.play();
        } else if (window.playerState.repeatMode === 'repeat-all') {
            let nextIndex = window.playerState.currentIndex + 1;
            if (nextIndex >= window.playerState.queue.length) {
                nextIndex = 0;
            }
            window.playerState.currentIndex = nextIndex;
            const nextTrack = window.playerState.queue[nextIndex];
            window.playerState.currentTrack = nextTrack;
            window.updateNowPlayingBar(nextTrack);
            window.playerState.audio.src = nextTrack.audioUrl;
            window.playerState.audio.play().then(() => {
                window.playerState.isPlaying = true;
                window.updatePlayPauseButton(true);
            }).catch(error => {
                console.error('Lỗi phát bài:', error);
                alert('Lỗi khi phát bài hát: ' + error.message);
            });
        } else {
            window.playerState.isPlaying = false;
            window.updatePlayPauseButton(false);
            if (progressSlider) {
                progressSlider.value = 0;
            }
        }
    });

    // Xử lý lỗi audio
    window.playerState.audio.addEventListener('error', function (e) {
        console.error('Lỗi tải âm thanh:', e);
        alert('Không thể tải tệp âm thanh. Vui lòng kiểm tra lại nguồn.');
        window.playerState.isPlaying = false;
        window.updatePlayPauseButton(false);
    });

    // Xử lý nút lyrics
    if (lyricsBtn) {
        lyricsBtn.addEventListener('click', function () {
            const track = window.playerState.currentTrack;
            if (!track || !track.title) {
                alert('Vui lòng chọn một bài hát trước khi xem lời bài hát.');
                return;
            }
            // Chuyển đổi trạng thái lyrics
            window.playerState.isLyricsActive = !window.playerState.isLyricsActive;
            window.updateLyricsButton();
            // Điều hướng đến trang lời bài hát
            window.location.href = `/Lyrics/LyricsKaraoke?trackTitle=${encodeURIComponent(track.title)}`;
            console.log('Lyrics button clicked, isLyricsActive:', window.playerState.isLyricsActive);
        });
    }

    // Hàm cập nhật now-playing bar
    window.updateNowPlayingBar = function(track) {
        const nowPlayingBar = document.querySelector('.now-playing-bar');
        if (!nowPlayingBar) {
            console.error('Không tìm thấy .now-playing-bar. Vui lòng đăng nhập.');
            alert('Vui lòng đăng nhập để sử dụng thanh phát nhạc.');
            return false;
        }

        const titleElement = nowPlayingBar.querySelector('.now-playing-track-title');
        const artistElement = nowPlayingBar.querySelector('.track-artist');
        const coverElement = nowPlayingBar.querySelector('.track-cover');
        const controlButtons = nowPlayingBar.querySelectorAll('.control-btn');
        const volumeBar = nowPlayingBar.querySelector('.volume-bar');

        if (!titleElement || !artistElement || !coverElement) {
            console.error('Thiếu phần tử trong .now-playing-bar');
            return false;
        }

        const artists = track.trackArtists?.length > 0
            ? track.trackArtists.map(ta => ta.artist?.name).filter(name => name).join(', ')
            : 'Không có nghệ sĩ';

        titleElement.textContent = track.title || 'Không có tiêu đề';
        artistElement.textContent = artists;
        coverElement.src = track.imageUrl || 'https://via.placeholder.com/56';
        coverElement.alt = track.title || 'Track';

        const totalSeconds = track.duration || 0;
        const minutes = Math.floor(totalSeconds / 60);
        const seconds = totalSeconds % 60;
        totalTimeElement.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        progressSlider.max = totalSeconds;
        progressSlider.value = 0;

        // Bật/tắt progressSlider
        if (track.title) {
            progressSlider.removeAttribute('disabled');
        } else {
            progressSlider.setAttribute('disabled', 'disabled');
        }

        controlButtons.forEach(btn => {
            if (track.title) {
                btn.removeAttribute('disabled');
            } else {
                btn.setAttribute('disabled', 'disabled');
            }
        });

        if (track.title) {
            volumeBar.removeAttribute('hidden');
            volumeBar.querySelectorAll('input, button').forEach(el => el.removeAttribute('disabled'));
        } else {
            volumeBar.setAttribute('hidden', 'hidden');
        }

        document.title = track.title && artists ? `${track.title} - ${artists}` : 'Music Player';
        console.log('Cập nhật NowPlayingBar:', { title: track.title, artist: artists });
        return true;
    };

    // Xử lý khi metadata của audio được tải
    window.playerState.audio.addEventListener('loadedmetadata', function () {
        updateProgressBar();
    });

    // Kiểm tra trackId từ URL hoặc context
    const urlParams = new URLSearchParams(window.location.search);
    const trackId = urlParams.get('trackId');
    if (trackId) {
        fetchTrack(trackId);
    }

    // Khởi tạo giao diện
    window.updatePlayPauseButton(false);
    window.updateRepeatButton();
    window.updateLyricsButton(); // Khởi tạo trạng thái nút lyrics
    if (!window.playerState.currentTrack) {
        progressSlider.disabled = true;
    }
</script>